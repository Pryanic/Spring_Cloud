zuul:
  routes:
    auth-server:
        path: /uaa/**
        sensitiveHeaders:
        serviceId: AUTH-SERVICE
    login-server:
      path: /login
      sensitiveHeaders:
      serviceId: AUTH-SERVICE
    truck-service:
      path: /truck/**
      serviceId: TRUCK-SERVICE
    load-service:
      path: /api/load/**
      serviceId: LOAD-SERVICE
    other-service:
      path: /other/**
      serviceId: TRUCK-SERVICE
  add-proxy-headers: true
#todo understand it
security:
  # Disable Spring Boot basic authentication
  basic:
    enabled: false
  oauth2:
    sso:
      loginPath: /login
    client:
      accessTokenUri: http://uaa-service/uaa/oauth/token
      userAuthorizationUri: /uaa/oauth/authorize
      clientId: acme
      clientSecret: acmesecret
    resource:
      jwt:
        keyValue: |
          -----BEGIN PUBLIC KEY-----
          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnGp/Q5lh0P8nPL21oMMrt2RrkT9AW5jgYwLfSUnJVc9G6uR3cXRRDCjHqWU5WYwivcF180A6CWp/ireQFFBNowgc5XaA0kPpzEtgsA5YsNX7iSnUibB004iBTfU9hZ2Rbsc8cWqynT0RyN4TP1RYVSeVKvMQk4GT1r7JCEC+TNu1ELmbNwMQyzKjsfBXyIOCFU/E94ktvsTZUHF4Oq44DBylCDsS1k7/sfZC2G5EU7Oz0mhG8+Uz6MSEQHtoIi6mc8u64Rwi3Z3tscuWG2ShtsUFuNSAFNkY7LkLn+/hxLCu2bNISMaESa8dG22CIMuIeRLVcAmEWEWH5EEforTg+QIDAQAB
          -----END PUBLIC KEY-----
      id: openid
      serviceId: ${PREFIX:}resource

logging:
  level.org.springframework.security: DEBUG
server:
  port: 8080


spring:
  application:
    name: zuul-server
  aop:
    proxyTargetClass: true
eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:7000/eureka/
